<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>65C02 CPU</TITLE>
</HEAD>
<BODY>
<A NAME="top"></A>
<CENTER>
<H2>65C02 CPU</H2>
</CENTER>
<P><HR WIDTH=50%>
<P>
Copyright (C) 2004-2013 by Anton Treuenfels
<P>
<UL>
<LI><A HREF="#l0a">Scope of This Document</A>
<LI><A HREF="#l09">Related Resources</A>
<LI><A HREF="#l01">65C02 CPU</A>
<UL>
<LI><A HREF="#l06">Registers</A>
<LI><A HREF="#l08">Status Flags</A>
<LI><A HREF="#l07">Special Memory Locations</A>
<LI><A HREF="#l02">Address Modes</A>
<LI><A HREF="#l03">Instruction Set Mnemonics</A>
<LI><A HREF="#l04">Instruction Set Opcodes</A>
<LI><A HREF="#l05">Instruction Set Timings</A>
</UL>
</UL>
<P>
<P><HR WIDTH=50%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l0a">Scope of This Document</A>
</BIG>
</STRONG>
</CENTER>
<P>
This document briefly describes the 65C02 microprocessor.
It does not attempt to discuss how to program the 65C02.
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=50%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l09">Related Resources</A>
</BIG>
</STRONG>
</CENTER>
<P>
Assembler Documentation
<UL>
<LI>
<A HREF="hxa.htm">HXA</A>
 : main documentation
<LI>
<A HREF="hxa65.htm">HXA65</A>
 : 6502-family variant of HXA
</UL>
<P>
Processor Documentation
<UL>
<LI>
<A HREF="p6502.htm">6502</A>
<LI>
65C02
<LI>
<A HREF="pr65c02.htm">R65C02</A>
<LI>
<A HREF="pw65c02s.htm">W65C02S</A>
<LI>
<A HREF="pw65c816.htm">W65C816S</A>
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=50%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l01">65C02 CPU</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 is an 8-bit Least-Significant-Byte-First microprocessor.
It is an enhanced CMOS version of the 
<A HREF="p6502.htm">6502</A>
.
<P>
Features:
<UL>
<LI>
new instructions
<LI>
new addressing modes for existing instructions
<LI>
status flag enhancements
<LI>
bug fixes (ie., JMP absolute indirect)
</UL>
<P>
All enhancements are upwardly compatible with all variants,
including the 
<A HREF="pw65c816.htm">W65C816S</A>
 8/16-bit processor.
<P>
The 65C02 processor was used in the Apple ][c.
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l06">Registers</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 registers are the same as the
<A HREF="p6502.htm">6502</A>
registers.
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<TR ALIGN=CENTER>
<TD>
<STRONG>Name</STRONG>
<TD>
<STRONG>Symbol</STRONG>
<TD>
<STRONG>Size (Bits)</STRONG>
<TR ALIGN=CENTER>
<TD>
Accumulator
<TD>
A
<TD>
8
<TR ALIGN=CENTER>
<TD>
X-Index
<TD>
X
<TD>
8
<TR ALIGN=CENTER>
<TD>
Y-Index
<TD>
Y
<TD>
8
<TR ALIGN=CENTER>
<TD>
Stack Pointer
<TD>
S
<TD>
8
<TR ALIGN=CENTER>
<TD>
Status Flags
<TD>
P
<TD>
8
<TR ALIGN=CENTER>
<TD>
Program Counter
<TD>
PC
<TD>
16
</TABLE>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l08">Status Flags</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 status flags are the same as the
<A HREF="p6502.htm">6502</A>
status flags, but their operation has been enhanced.
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<CAPTION>Status Flags Register</CAPTION>
<TR ALIGN=CENTER>
<TD>
<STRONG>Bit</STRONG>
<TD>
<STRONG>7</STRONG>
<TD>
<STRONG>6</STRONG>
<TD>
<STRONG>5</STRONG>
<TD>
<STRONG>4</STRONG>
<TD>
<STRONG>3</STRONG>
<TD>
<STRONG>2</STRONG>
<TD>
<STRONG>1</STRONG>
<TD>
<STRONG>0</STRONG>
<TR ALIGN=CENTER>
<TD>
<STRONG>Flag</STRONG>
<TD>
N
<TD>
V
<TD>
-
<TD>
B
<TD>
D
<TD>
I
<TD>
Z
<TD>
C
</TABLE>
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<CAPTION>Status Flags</CAPTION>
<TR ALIGN=CENTER>
<TD>
<STRONG>Symbol</STRONG>
<TD>
<STRONG>Name</STRONG>
<TD>
<STRONG>Clear (=0)</STRONG>
<TD>
<STRONG>Set (=1)</STRONG>
<TR ALIGN=CENTER>
<TD>
B
<TD>
Break
<TD>
No Software Break Occurred
<TD>
Software Break Occurred
<TR ALIGN=CENTER>
<TD>
C
<TD>
Carry
<TD>
No Carryout/Borrow Required
<TD>
Carryout/No Borrow Required
<TR ALIGN=CENTER>
<TD>
D
<TD>
Decimal Mode
<TD>
Binary Arithmetic Enabled
<TD>
BCD Arithmetic Enabled
<TR ALIGN=CENTER>
<TD>
I
<TD>
Interrupt Disable
<TD>
Maskable IRQs Enabled
<TD>
Maskable IRQs Disabled
<TR ALIGN=CENTER>
<TD>
N
<TD>
Sign
<TD>
Result is Positive
<TD>
Result is Negative
<TR ALIGN=CENTER>
<TD>
V
<TD>
Overflow
<TD>
No Signed Arithmetic Overflow
<TD>
Signed Arithmetic Overflow
<TR ALIGN=CENTER>
<TD>
Z
<TD>
Zero
<TD>
Result is Not Zero
<TD>
Result is Zero
</TABLE>
<P>
Notes:
<UL>
<LI>
after subtraction the C-flag is clear if a borrow was required,
set otherwise
<LI>
after an IRQ or NMI the saved B-flag on the stack is clear;
after a BRK instruction it is set
<LI>
the N-, V- and Z-flags are valid in decimal mode
<LI>
the D-flag is clear after processor reset
<LI>
the D-flag is cleared by interrupts
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l07">Special Memory Locations</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 special memory locations are the same as the
<A HREF="p6502.htm">6502</A>
special memory locations.
<P>
<UL>
<LI>
<STRONG>$0000 - 00FF</STRONG>
 : Page Zero
<LI>
instructions addressing this page of memory require only one-byte
addresses, as the processor "assumes" a high byte of $00 for a full
16-bit address of $00xx.
Many 6502 instructions are thus shorter and faster if addressed here
rather than elsewhere, and others can only be addressed here
<LI>
<STRONG>$0100 - 01FF</STRONG>
 : Page One
<LI>
this page of memory is always the 256-byte processor stack.
For any instructions which increment or decrement the stack pointer,
the processor "assumes" a high byte of $01 for a full 16-bit address
of $01xx
<LI>
<STRONG>$FFFA - FFFB</STRONG>
 : Non-Maskable Interrupt Vector
<LI>
the 16-bit address stored here is placed in the program counter
during a hardware NMI
<LI>
<STRONG>$FFFC - FFFD</STRONG>
 : Reset Vector
<LI>
the 16-bit address stored here is placed in the program counter
during a processor reset
<LI>
<STRONG>$FFFE - FFFF</STRONG>
 : Maskable Interrupt Vector
<LI>
the 16-bit address stored here is placed in the program counter
during hardware IRQs and software BRKs
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l02">Address Modes</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 has all of the
<A HREF="p6502.htm">6502</A>
address modes, plus two new ones.
<P>
Where an operand byte comes from can be specified several ways:
<P>
<UL>
<LI>
<STRONG>A</STRONG>
<LI>
the accumulator (a literal character 'A')
<LI>
<STRONG>val8</STRONG>
<LI>
an 8-bit value
<LI>
<STRONG>addr8</STRONG>
<LI>
an 8-bit zero-page address (a 
<EM>direct</EM>
 address).
The full 16-bit address of the operand is 
<EM>$00addr8</EM>
<LI>
<STRONG>( addr8i )</STRONG>
<LI>
two consecutive zero-page addresses,
<EM>addr8i</EM>
 and 
<EM>addr8i+1</EM>
,
which together contain the 16-bit address of the operand byte in
low byte/high byte form (an 
<EM>indirect</EM>
 address)
<LI>
<STRONG>addr16</STRONG>
<LI>
a 16-bit address anywhere in memory (a 
<EM>direct</EM>
 address)
<LI>
<STRONG>( addr16i )</STRONG>
<LI>
two consecutive addresses anywhere in memory,
<EM>addr16i</EM>
 and 
<EM>addr16i+1</EM>
,
which together contain a 16-bit address in low byte/high byte form
to be loaded into the program counter (an 
<EM>indirect</EM>
 address)
</UL>
<P>
Several modes add the values of the X- or Y-index registers to
one of these forms before (
<EM>pre-indexed</EM>
) or after (
<EM>post-indexed</EM>
)
evaluating the address.
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<CAPTION>Address Modes and Object Sizes</CAPTION>
<TR ALIGN=CENTER>
<TD>
<STRONG>Mode</STRONG>
<TD>
<STRONG>Source Form</STRONG>
<TD>
<STRONG>Object Form</STRONG>
<TD>
<STRONG>#Bytes</STRONG>
<TD>
<STRONG>16-Bit Effective Address</STRONG>
<TR ALIGN=CENTER>
<TD>
Absolute
<TD>
mnemonic addr16
<TD>
opcode &lt;addr16 &gt;addr16
<TD>
3
<TD>
addr16
<TR ALIGN=CENTER>
<TD>
Absolute Indirect
<TD>
mnemonic (addr16i)
<TD>
opcode &lt;addr16i &gt;addr16i
<TD>
3
<TD>
addr16i -&gt; addr16
<TR ALIGN=CENTER>
<TD>
Absolute Indexed Indirect*
<TD>
mnemonic (addr16i,X)
<TD>
opcode &lt;addr16i &gt;addr16i
<TD>
3
<TD>
addr16i+X -&gt; addr16
<TR ALIGN=CENTER>
<TD>
Absolute X-Indexed
<TD>
mnemonic addr16,X
<TD>
opcode &lt;addr16 &gt;addr16
<TD>
3
<TD>
addr16+X
<TR ALIGN=CENTER>
<TD>
Absolute Y-Indexed
<TD>
mnemonic addr16,Y
<TD>
opcode &lt;addr16 &gt;addr16
<TD>
3
<TD>
addr16+Y
<TR ALIGN=CENTER>
<TD>
Accumulator
<TD>
mnemonic 'A'
<TD>
opcode
<TD>
1
<TD>
n/a
<TR ALIGN=CENTER>
<TD>
Immediate
<TD>
mnemonic #val8
<TD>
opcode val8
<TD>
2
<TD>
n/a
<TR ALIGN=CENTER>
<TD>
Implied
<TD>
mnemonic
<TD>
opcode
<TD>
1
<TD>
n/a
<TR ALIGN=CENTER>
<TD>
Relative
<TD>
mnemonic val8
<TD>
opcode val8
<TD>
2
<TD>
PC+val8 (sign extended)
<TR ALIGN=CENTER>
<TD>
Zero Page
<TD>
mnemonic addr8
<TD>
opcode addr8
<TD>
2
<TD>
$00addr8
<TR ALIGN=CENTER>
<TD>
Zero Page Indexed Indirect
<TD>
mnemonic (addr8i,X)
<TD>
opcode addr8i
<TD>
2
<TD>
$00addr8i+X -&gt; addr16
<TR ALIGN=CENTER>
<TD>
Zero Page Indirect*
<TD>
mnemonic (addr8i)
<TD>
opcode addr8i
<TD>
2
<TD>
$00addr8i -&gt; addr16
<TR ALIGN=CENTER>
<TD>
Zero Page Indirect Indexed
<TD>
mnemonic (addr8i),Y
<TD>
opcode addr8i
<TD>
2
<TD>
$00addr8i -&gt; addr16 + Y
<TR ALIGN=CENTER>
<TD>
Zero Page X-Indexed
<TD>
mnemonic addr8,X
<TD>
opcode addr8
<TD>
2
<TD>
$00addr8+X
<TR ALIGN=CENTER>
<TD>
Zero Page Y-Indexed
<TD>
mnemonic addr8,Y
<TD>
opcode addr8
<TD>
2
<TD>
$00addr8+Y
</TABLE>
<P>
Notes
<UL>
<LI>
* = additional 65C02 address mode
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l03">Instruction Set Mnemonics</A>
</BIG>
</STRONG>
</CENTER>
<P>
The 65C02 instruction set mnemonics include all of the
<A HREF="p6502.htm">6502</A>
instruction set mnemonics,
some of which are enhanced with additional address modes.
There are also eight additional instruction mnemonics.
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<TR ALIGN=CENTER>
<TD>
<STRONG>Mnemonic</STRONG>
<TD>
<STRONG>Status Flags Affected</STRONG>
<TR ALIGN=CENTER>
<TD>
<STRONG>Description</STRONG>
<TD>
<STRONG>Operation</STRONG>
<TR ALIGN=CENTER>
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
<STRONG>ADC</STRONG>
<TD>
P[C+N+V+Z]
<TR ALIGN=CENTER>
<TD>
Add memory to accumulator and carry flag
<TD>
A + M + P[C] -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>AND</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Bitwise AND memory with accumulator
<TD>
A AND M -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>ASL</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Arithmetic shift memory or accumulator one bit left to carry
<TD>
P[C] &lt;- M[7 &lt;- ... &lt;- 0] &lt;- 0
<TR ALIGN=CENTER>
<TD>
<STRONG>BCC</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if carry clear
<TD>
PC + disp8 -&gt; PC if P[C]=0
<TR ALIGN=CENTER>
<TD>
<STRONG>BCS</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if carry set
<TD>
PC + disp8 -&gt; PC if P[C]=1
<TR ALIGN=CENTER>
<TD>
<STRONG>BEQ</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if equal to zero
<TD>
PC + disp8 -&gt; PC if P[Z]=1
<TR ALIGN=CENTER>
<TD>
<STRONG>BIT</STRONG>
<TD>
P[N+V+Z]
<TR ALIGN=CENTER>
<TD>
Bitwise AND memory with accumulator (but only set flags)
<TD>
M[7] -&gt; P[N]; M[6] -&gt; P[V]; A AND M -&gt; P[Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>BMI</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if minus
<TD>
PC + disp8 -&gt; PC if P[N]=1
<TR ALIGN=CENTER>
<TD>
<STRONG>BNE</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if not equal to zero
<TD>
PC + disp8 -&gt; PC if P[Z]=0
<TR ALIGN=CENTER>
<TD>
<STRONG>BPL</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if plus
<TD>
PC + disp8 -&gt; PC if P[N]=0
<TR ALIGN=CENTER>
<TD>
<STRONG>BRA</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch always
<TD>
PC + disp8 -&gt; PC
<TR ALIGN=CENTER>
<TD>
<STRONG>BRK</STRONG>
<TD>
P[B+I]
<TR ALIGN=CENTER>
<TD>
Software break
<TD>
PC+2-&gt;(S); 1-&gt;P[B]; P-&gt;(S); 1-&gt;P[I]; (FFFE)-&gt;PC
<TR ALIGN=CENTER>
<TD>
<STRONG>BVC</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if overflow flag clear
<TD>
PC + disp8 -&gt; PC if P[V]=0
<TR ALIGN=CENTER>
<TD>
<STRONG>BVS</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Branch if overflow flag set
<TD>
PC + disp8 -&gt; PC if P[V]=1
<TR ALIGN=CENTER>
<TD>
<STRONG>CLC</STRONG>
<TD>
P[C]
<TR ALIGN=CENTER>
<TD>
Clear carry flag
<TD>
0 -&gt; P[C]
<TR ALIGN=CENTER>
<TD>
<STRONG>CLD</STRONG>
<TD>
P[D]
<TR ALIGN=CENTER>
<TD>
Clear decimal flag
<TD>
0 -&gt; P[D]
<TR ALIGN=CENTER>
<TD>
<STRONG>CLI</STRONG>
<TD>
P[I]
<TR ALIGN=CENTER>
<TD>
Clear interrupt disable flag
<TD>
0 -&gt; P[I]
<TR ALIGN=CENTER>
<TD>
<STRONG>CLV</STRONG>
<TD>
P[V]
<TR ALIGN=CENTER>
<TD>
Clear overflow flag
<TD>
0 -&gt; P[V]
<TR ALIGN=CENTER>
<TD>
<STRONG>CMP</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Subtract memory from accumulator (but only set flags)
<TD>
A - M -&gt; P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>CPX</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Subtract memory from X-register (but only set flags)
<TD>
X - M -&gt; P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>CPY</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Subtract memory from Y-register (but only set flags)
<TD>
Y - M -&gt; P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>DEC</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Decrement memory by one
<TD>
M - 1 -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>DEX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Decrement X-register by one
<TD>
X - 1 -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>DEY</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Decrement Y-register by one
<TD>
Y - 1 -&gt; Y
<TR ALIGN=CENTER>
<TD>
<STRONG>EOR</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Bitwise Exclusive-OR memory with accumulator
<TD>
A EOR M -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>INC</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Increment memory by one
<TD>
M + 1 -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>INX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Increment X-register by one
<TD>
X + 1 -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>INY</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Increment Y-register by one
<TD>
Y + 1 -&gt; Y
<TR ALIGN=CENTER>
<TD>
<STRONG>JMP</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Jump to new address
<TD>
addr16 -&gt; PC
<TR ALIGN=CENTER>
<TD>
<STRONG>JSR</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Jump to subroutine
<TD>
PC+2-&gt;(S); addr16-&gt;PC
<TR ALIGN=CENTER>
<TD>
<STRONG>LDA</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Load accumulator from memory
<TD>
M -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>LDX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Load X-register from memory
<TD>
M -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>LDY</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Load Y-register from memory
<TD>
M -&gt; Y
<TR ALIGN=CENTER>
<TD>
<STRONG>LSR</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Logical shift memory or accumulator one bit right to carry
<TD>
0 -&gt; M[7 -&gt; ... -&gt; 0] -&gt; P[C]
<TR ALIGN=CENTER>
<TD>
<STRONG>NOP</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
No operation
<TD>
PC + 1 -&gt; PC
<TR ALIGN=CENTER>
<TD>
<STRONG>ORA</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Bitwise Inclusive-OR memory with accumulator
<TD>
A OR M -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>PHA</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Push accumulator on stack
<TD>
A -&gt; (S)
<TR ALIGN=CENTER>
<TD>
<STRONG>PHP</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Push status flags on stack
<TD>
P -&gt; (S)
<TR ALIGN=CENTER>
<TD>
<STRONG>PHX</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Push X-register on stack
<TD>
X -&gt; (S)
<TR ALIGN=CENTER>
<TD>
<STRONG>PHY</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Push Y-register flag on stack
<TD>
Y -&gt; (S)
<TR ALIGN=CENTER>
<TD>
<STRONG>PLA</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Pull accumulator from stack
<TD>
(S) -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>PLP</STRONG>
<TD>
P[B+C+D+I+N+V+Z]
<TR ALIGN=CENTER>
<TD>
Pull status flags from stack
<TD>
(S) -&gt; P
<TR ALIGN=CENTER>
<TD>
<STRONG>PLX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Pull X-register from stack
<TD>
(S) -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>PLY</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Pull Y-register from stack
<TD>
(S) -&gt; Y
<TR ALIGN=CENTER>
<TD>
<STRONG>ROL</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Rotate memory or accumulator one bit left through carry
<TD>
P[C] &lt;- M[7 &lt;- ... &lt;- 0] &lt;- P[C]
<TR ALIGN=CENTER>
<TD>
<STRONG>ROR</STRONG>
<TD>
P[C+N+Z]
<TR ALIGN=CENTER>
<TD>
Rotate memory or accumulator one bit right through carry
<TD>
P[C] -&gt; M[7 -&gt; ... -&gt; 0] -&gt; P[C]
<TR ALIGN=CENTER>
<TD>
<STRONG>RTI</STRONG>
<TD>
P[B+C+D+I+N+V+Z]
<TR ALIGN=CENTER>
<TD>
Return from interrupt
<TD>
(S)-&gt;P; (S)-&gt;PC
<TR ALIGN=CENTER>
<TD>
<STRONG>RTS</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Return from subroutine
<TD>
(S) + 1 -&gt; PC
<TR ALIGN=CENTER>
<TD>
<STRONG>SBC</STRONG>
<TD>
P[C+N+V+Z]
<TR ALIGN=CENTER>
<TD>
Subtract memory from accumulator and complement of carry flag
<TD>
A - M - ~P[C] -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>SEC</STRONG>
<TD>
P[C]
<TR ALIGN=CENTER>
<TD>
Set carry flag
<TD>
1 -&gt; P[C]
<TR ALIGN=CENTER>
<TD>
<STRONG>SED</STRONG>
<TD>
P[D]
<TR ALIGN=CENTER>
<TD>
Set decimal flag
<TD>
1 -&gt; P[D]
<TR ALIGN=CENTER>
<TD>
<STRONG>SEI</STRONG>
<TD>
P[I]
<TR ALIGN=CENTER>
<TD>
Set interrupt disable flag
<TD>
1 -&gt; P[I]
<TR ALIGN=CENTER>
<TD>
<STRONG>STA</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Store accumulator to memory
<TD>
A -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>STX</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Store X-register to memory
<TD>
X -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>STY</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Store Y-register to memory
<TD>
Y -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>STZ</STRONG>
<TD>
<EM>none</EM>
<TR ALIGN=CENTER>
<TD>
Store zero to memory
<TD>
0 -&gt; M
<TR ALIGN=CENTER>
<TD>
<STRONG>TAX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer accumulator to X-register
<TD>
A -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>TAY</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer accumulator to Y-register
<TD>
A -&gt; Y
<TR ALIGN=CENTER>
<TD>
<STRONG>TRB</STRONG>
<TD>
P[Z]
<TR ALIGN=CENTER>
<TD>
Test and reset bits
<TD>
~A AND M-&gt;M; A AND M-&gt;P[Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>TSB</STRONG>
<TD>
P[Z]
<TR ALIGN=CENTER>
<TD>
Test and set bits
<TD>
A OR M-&gt;M; A AND M-&gt;P[Z]
<TR ALIGN=CENTER>
<TD>
<STRONG>TSX</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer stack pointer to X-register
<TD>
S -&gt; X
<TR ALIGN=CENTER>
<TD>
<STRONG>TXA</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer X-register to accumulator
<TD>
X -&gt; A
<TR ALIGN=CENTER>
<TD>
<STRONG>TXS</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer X-register to stack pointer
<TD>
X -&gt; S
<TR ALIGN=CENTER>
<TD>
<STRONG>TYA</STRONG>
<TD>
P[N+Z]
<TR ALIGN=CENTER>
<TD>
Transfer Y-register to accumulator
<TD>
Y -&gt; A
</TABLE>
<P>
Notes:
<UL>
<LI>
the BIT immediate instruction does not change P[N] or P[V]
<LI>
a BRK instruction cannot be masked by SEI
<LI>
the JMP absolute indirect instruction with an operand of the form $xxFF
(ie., the last byte of a page) functions properly with one additional cycle
taken
<LI>
BRK and JSR both push the program counter plus two onto the stack;
RTS increments the stored program counter by one before restoring it,
but RTI does not
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l04">Instruction Set Opcodes</A>
</BIG>
</STRONG>
</CENTER>
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ADC
<TD>
-
<TD>
69
<TD>
65
<TD>
75
<TD>
-
<TD>
6D
<TD>
7D
<TD>
79
<TD>
-
<TD>
-
<TD>
61
<TD>
71
<TD>
-
<TD>
-
<TD>
72*
<TR ALIGN=CENTER>
<TD>
AND
<TD>
-
<TD>
29
<TD>
25
<TD>
35
<TD>
-
<TD>
2D
<TD>
3D
<TD>
39
<TD>
-
<TD>
-
<TD>
21
<TD>
31
<TD>
-
<TD>
-
<TD>
32*
<TR ALIGN=CENTER>
<TD>
ASL
<TD>
0A
<TD>
-
<TD>
06
<TD>
16
<TD>
-
<TD>
0E
<TD>
1E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
BCC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
90
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BCS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
B0
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BEQ
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
F0
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BIT
<TD>
-
<TD>
89*
<TD>
24
<TD>
34*
<TD>
-
<TD>
2C
<TD>
3C*
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BMI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
30
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BNE
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
D0
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BPL
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
10
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BRA**
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
80
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BRK
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
00
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BVC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
50
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BVS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
70
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
CLC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
18
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLD
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
D8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
58
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLV
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
B8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CMP
<TD>
-
<TD>
C9
<TD>
C5
<TD>
D5
<TD>
-
<TD>
CD
<TD>
DD
<TD>
D9
<TD>
-
<TD>
-
<TD>
C1
<TD>
D1
<TD>
-
<TD>
-
<TD>
D2*
<TR ALIGN=CENTER>
<TD>
CPX
<TD>
-
<TD>
E0
<TD>
E4
<TD>
-
<TD>
-
<TD>
EC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CPY
<TD>
-
<TD>
C0
<TD>
C4
<TD>
-
<TD>
-
<TD>
CC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
DEC
<TD>
3A*
<TD>
-
<TD>
C6
<TD>
D6
<TD>
-
<TD>
CE
<TD>
DE
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
DEX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
CA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
DEY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
88
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
EOR
<TD>
-
<TD>
49
<TD>
45
<TD>
55
<TD>
-
<TD>
4D
<TD>
5D
<TD>
59
<TD>
-
<TD>
-
<TD>
41
<TD>
51
<TD>
-
<TD>
-
<TD>
52*
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
INC
<TD>
1A*
<TD>
-
<TD>
E6
<TD>
F6
<TD>
-
<TD>
EE
<TD>
FE
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
INX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
E8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
INY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
C8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
JMP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
4C
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
6C
<TD>
7C*
<TD>
-
<TR ALIGN=CENTER>
<TD>
JSR
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
20
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
LDA
<TD>
-
<TD>
A9
<TD>
A5
<TD>
B5
<TD>
-
<TD>
AD
<TD>
BD
<TD>
B9
<TD>
-
<TD>
-
<TD>
A1
<TD>
B1
<TD>
-
<TD>
-
<TD>
B2*
<TR ALIGN=CENTER>
<TD>
LDX
<TD>
-
<TD>
A2
<TD>
A6
<TD>
-
<TD>
B6
<TD>
AE
<TD>
-
<TD>
BE
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
LDY
<TD>
-
<TD>
A0
<TD>
A4
<TD>
B4
<TD>
-
<TD>
AC
<TD>
BC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
LSR
<TD>
4A
<TD>
-
<TD>
46
<TD>
56
<TD>
-
<TD>
4E
<TD>
5E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
NOP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
EA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ORA
<TD>
-
<TD>
09
<TD>
05
<TD>
15
<TD>
-
<TD>
0D
<TD>
1D
<TD>
19
<TD>
-
<TD>
-
<TD>
01
<TD>
11
<TD>
-
<TD>
-
<TD>
12*
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
PHA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
48
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
08
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHX**
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
DA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHY**
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
5A
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
68
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
28
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLX**
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
FA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLY**
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
7A
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ROL
<TD>
2A
<TD>
-
<TD>
26
<TD>
36
<TD>
-
<TD>
2E
<TD>
3E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
ROR
<TD>
6A
<TD>
-
<TD>
66
<TD>
76
<TD>
-
<TD>
6E
<TD>
7E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
RTI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
40
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
RTS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
60
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
SBC
<TD>
-
<TD>
E9
<TD>
E5
<TD>
F5
<TD>
-
<TD>
ED
<TD>
FD
<TD>
F9
<TD>
-
<TD>
-
<TD>
E1
<TD>
F1
<TD>
-
<TD>
-
<TD>
F2*
<TR ALIGN=CENTER>
<TD>
SEC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
38
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
SED
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
F8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
SEI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
78
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STA
<TD>
-
<TD>
-
<TD>
85
<TD>
95
<TD>
-
<TD>
8D
<TD>
9D
<TD>
99
<TD>
-
<TD>
-
<TD>
81
<TD>
91
<TD>
-
<TD>
-
<TD>
92*
<TR ALIGN=CENTER>
<TD>
STX
<TD>
-
<TD>
-
<TD>
86
<TD>
-
<TD>
96
<TD>
8E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STY
<TD>
-
<TD>
-
<TD>
84
<TD>
94
<TD>
-
<TD>
8C
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STZ**
<TD>
-
<TD>
-
<TD>
64
<TD>
74
<TD>
-
<TD>
9C
<TD>
9E
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
TAX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
AA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TAY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
A8
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TRB**
<TD>
-
<TD>
-
<TD>
14
<TD>
-
<TD>
-
<TD>
1C
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TSB**
<TD>
-
<TD>
-
<TD>
04
<TD>
-
<TD>
-
<TD>
0C
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TSX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
BA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TXA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
8A
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TXS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
9A
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TYA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
98
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
</TABLE>
<P>
Notes:
<UL>
<LI>
* = address mode addition to NMOS 6502 instruction
<LI>
** = instruction addition to NMOS 6502 set
<LI>
all unused opcodes are defined as one-, two- or three-byte "no operations"
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P>
<P><HR WIDTH=25%>
<P>
<CENTER>
<STRONG>
<BIG>
<A NAME="l05">Instruction Set Timings</A>
</BIG>
</STRONG>
</CENTER>
<P>
<TABLE ALIGN=CENTER BORDER=1 CELLPADDING=2>
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ADC
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
AND
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
ASL
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
6+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
BCC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BCS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BEQ
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BIT
<TD>
2
<TD>
-
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BMI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BNE
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BPL
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BRA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BRK
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
7
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BVC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
BVS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2++
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
CLC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLD
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CLV
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CMP
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
CPX
<TD>
-
<TD>
2
<TD>
3
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
CPY
<TD>
-
<TD>
2
<TD>
3
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
DEC
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
7
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
DEX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
DEY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
EOR
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
INC
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
7
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
INX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
INY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
JMP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TR ALIGN=CENTER>
<TD>
JSR
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
6
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
LDA
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
LDX
<TD>
-
<TD>
2
<TD>
3
<TD>
-
<TD>
4
<TD>
4
<TD>
-
<TD>
4+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
LDY
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
LSR
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
6+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
NOP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ORA
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
PHA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PHY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLP
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
PLY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
ROL
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
6+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
ROR
<TD>
2
<TD>
-
<TD>
5
<TD>
6
<TD>
-
<TD>
6
<TD>
6+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
RTI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
6
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
RTS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
6
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
SBC
<TD>
-
<TD>
2
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
5+
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
SEC
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
SED
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
SEI
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STA
<TD>
-
<TD>
-
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
4+
<TD>
-
<TD>
-
<TD>
6
<TD>
6
<TD>
-
<TD>
-
<TD>
5
<TR ALIGN=CENTER>
<TD>
STX
<TD>
-
<TD>
-
<TD>
3
<TD>
-
<TD>
4
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STY
<TD>
-
<TD>
-
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
STZ
<TD>
-
<TD>
-
<TD>
3
<TD>
4
<TD>
-
<TD>
4
<TD>
4+
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
-
<TD>
Acc
<TD>
Imm
<TD>
ZP
<TD>
ZP,X
<TD>
ZP,Y
<TD>
Abs
<TD>
Abs,X
<TD>
Abs,Y
<TD>
Imp
<TD>
Rel
<TD>
(ZP,X)
<TD>
(ZP),Y
<TD>
(Abs)
<TD>
(Abs,X)
<TD>
(ZP)
<TR ALIGN=CENTER>
<TD>
TAX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TAY
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TRB
<TD>
-
<TD>
-
<TD>
5
<TD>
-
<TD>
-
<TD>
6
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TSB
<TD>
-
<TD>
-
<TD>
5
<TD>
-
<TD>
-
<TD>
6
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TSX
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TXA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TXS
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TR ALIGN=CENTER>
<TD>
TYA
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
2
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
<TD>
-
</TABLE>
<P>
Notes:
<UL>
<LI>
+ = add one cycle if indexing across a page boundary
<LI>
++ = add one cycle if branch is taken.
Add one more cycle if branch taken crosses page boundary
<LI>
add one cycle after decimal mode instructions (to set flags)
<LI>
timings are taken from WDC W65C02S data sheets
</UL>
<P>
<CENTER>
<A HREF="#top">Page Top</A>
</CENTER>
<P><HR WIDTH=50%>
<EM>Last revised: Tue Sep 17 11:22:50 2013</EM>
</BODY>
</HTML>
