; Hobby Cross-Assembler Test 113
; Macros\PUTBACKS pseudo op
; ok: "PUTBACKS" psop

; by Anton Treuenfels

; first created: 09/19/09
; last revised:  09/19/09

; no errors to detect

        .listfile
        .errfile

; -------------------------------

        .cpu    "T_16_L"    ; required psop
        .org    $1000       ; required psop

; -------------------------------

; - we'll create a macro that does nothing but pass along its single argument
; - also shows that strings are evaluated before putback

        .macro  PASS_STR, ?arg
        .putbacks   ".string   \"" ?arg "\""
        .endm

; try it - these should be the same

        .string     "Hello, world!"
        PASS_STR    "Hello, world!"

; let's try another do-nothing macro. This one passes more than one argument

]A1$    =   "?arg1"

        .macro  PASS_TWO, ?arg1, ?arg2
        .putbacks ".byte " ]A1$ ", ?arg2"
        .endm

; try it

        .byte       $01, $02
        PASS_TWO    $01, $02

; try it again

        .byte       '\n', '\$0D'
        PASS_TWO    '\n', '\$0D'

; one more - pass three arguments !
; - this time show that string concatenation also happens

        .macro  PASS_3, ?arg1, ?arg2, ?arg3
        .putbacks   ".word ", ]A1$ ", ?arg2, ?arg3"
        .endm

; try it

        .word   1, '\,', $80 + 1
        PASS_3  1, '\,', $80 + 1

; -------------------------------

; try aliasing

        .psalias    putbacks=defer

        .macro  PSEUDO_ECHO, ?arg
        .defer  ".string \"" ?arg "\""
        .endm

; try it

        PSEUDO_ECHO "Hello, World!"

; -------------------------------

; try starting a line with an opcode field (again, actually)

        .macro  STORE_AS, ?type, ?val
        .defer  "?type ?val"
        .endm

; try it

        STORE_AS byte, $01
        STORE_AS word, $01+1
        STORE_AS long, 1*3

; -------------------------------

; try a line starting with a label

        .macro LABEL_F, ?arg
        .putbacks   "?arg .word ?arg"
        .endm

; try it

        LABEL_F ]here

; -------------------------------

        .end

