; Hobby Cross-Assembler Test 404b
; Program Counter Manipulation\Pad To Specific Byte Boundary
; ok: "PADTO" pseudo op (segmented)

; by Anton Treuenfels

; first created: 07/19/05
; last revised:  09/26/07

; no errors to detect

        .listfile
        .errfile

        .hexfile            ; check output

; -------------------------------

        .cpu    "T_16_L"    ; required psop
;        .org    $1000       ; can't use outside of explicit segment

; -------------------------------

; for this test first we establish the existence, type and order
; of the segments we want

; first explicit segment *must* be absolute

        .segment	abs1

        .org    $1000       ; ORG before any data makes segment absolute

        .ends               ; no padding specified

        .segment    rel1

        .padto  8           ; no padding (ends on 8-byte boundary)

        .ends

        .segment    abs2

        .org    $2000

        .padto  28          ; force padding

        .ends

        .segment    rel2

        .padto  14 + 14     ; force padding

        .ends

; -------------------------------

; we're going to try to generate an output file consisting of the values
; $00 -> $5F in sequence even though the source file generates them
; non-sequentially (compare hexfile to listfile)

repeatcnt   .equ    24
]loopnum    .equ    0

        .macro store, ?basenum
        .byte   ?basenum * repeatcnt + ]loopnum
        .endm

; -------------------------------

        .repeat     repeatcnt

        .segment    abs1

        store   0

        .ends

        .segment    rel1

        store   1

        .ends

        .segment    abs2

        store   2

        .ends

        .segment    rel2

        store   3

        .ends

]loopnum =  ]loopnum + 1

; end of repeat block

        .endr

; -------------------------------

; test padding to specific address with specific value

        .segment    abspad

        .org    $c000       ; ORG makes segment absolute

        .byte   $ff

        .padto  $c010, $a5

        .ends

        .segment    relpad

        .word   $ffff

        .padto  $c020, $a500

        .ends

; -------------------------------

        .end
