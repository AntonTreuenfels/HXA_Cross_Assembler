; Hobby Cross-Assembler Processor Error Test 001g
; 6502\Instruction Set
; error: illegal forced address modes

; generated by MODE65.AWK - Thu Jul 12 11:38:23 2007

; warning(s):

; error(s): 785
; - illegal address mode

; fatal:

; -------------------------------

		.listfile
		.errfile
		.maxerr	5000		; increase default count

; -------------------------------

        .cpu    "6502"      ; required psop
        .org    $1000       ; required psop

; -------------------------------

; backward reference

bakbyt	.equ	$12
bakwrd	.equ	$1234

		; check:
		; ADC
		; AND
		; CMP
		; EOR
		; LDA
		; ORA
		; SBC

 -
		; abi

		assume	addr:absolute
		adc		($1234)     ; abi -> ab*
		assume	addr:absolute
		adc		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		adc		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		adc		($1234)     ; abi -> zp*
		assume	addr:zeropage
		adc		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		adc		(fwdwrd)    ; abi -> zp*

		; aby

		assume	addr:zeropage
		adc		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		adc		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		adc		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		adc		A           ; acc -> ab*
		assume	addr:absolute
		adc		a           ; acc -> ab*
		assume	addr:zeropage
		adc		A           ; acc -> zp*
		assume	addr:zeropage
		adc		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		adc		            ; acc_i -> ab*
		assume	addr:zeropage
		adc		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		adc		#$12        ; imm -> ab*
		assume	addr:absolute
		adc		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		adc		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		adc		#$12        ; imm -> zp*
		assume	addr:zeropage
		adc		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		adc		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		adc		            ; imp -> ab*
		assume	addr:zeropage
		adc		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		adc		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		adc		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		adc		(fwdbyt),y  ; zpiy -> ab*

		; zpxi

		assume	addr:absolute
		adc		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		adc		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		adc		(fwdbyt,x)  ; zpxi -> ab*

		; zpy

		assume	addr:zeropage
		adc		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		adc		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		adc		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; ASL
		; LSR
		; ROL
		; ROR

 -
		; abi

		assume	addr:absolute
		asl		($1234)     ; abi -> ab*
		assume	addr:absolute
		asl		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		asl		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		asl		($1234)     ; abi -> zp*
		assume	addr:zeropage
		asl		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		asl		(fwdwrd)    ; abi -> zp*

		; aby

		assume	addr:absolute
		asl		$1234,y     ; aby -> ab*
		assume	addr:absolute
		asl		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		asl		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		asl		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		asl		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		asl		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		asl		A           ; acc -> ab*
		assume	addr:absolute
		asl		a           ; acc -> ab*
		assume	addr:zeropage
		asl		A           ; acc -> zp*
		assume	addr:zeropage
		asl		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		asl		            ; acc_i -> ab*
		assume	addr:zeropage
		asl		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		asl		#$12        ; imm -> ab*
		assume	addr:absolute
		asl		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		asl		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		asl		#$12        ; imm -> zp*
		assume	addr:zeropage
		asl		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		asl		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		asl		            ; imp -> ab*
		assume	addr:zeropage
		asl		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		asl		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		asl		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		asl		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		asl		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		asl		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		asl		(fwdbyt),y  ; zpiy -> zp*

		; zpxi

		assume	addr:absolute
		asl		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		asl		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		asl		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		asl		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		asl		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		asl		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		asl		$12,y       ; zpy -> ab*
		assume	addr:absolute
		asl		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		asl		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		asl		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		asl		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		asl		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; BCC
		; BCS
		; BEQ
		; BGE
		; BLT
		; BMI
		; BNE
		; BPL
		; BVC
		; BVS

 -
		; ab

		assume	addr:absolute
		bcc		$1234       ; ab -> ab*
		assume	addr:absolute
		bcc		bakwrd      ; ab -> ab*
		assume	addr:absolute
		bcc		fwdwrd      ; ab -> ab*
		assume	addr:zeropage
		bcc		$1234       ; ab -> zp*
		assume	addr:zeropage
		bcc		bakwrd      ; ab -> zp*
		assume	addr:zeropage
		bcc		fwdwrd      ; ab -> zp*

		; abi

		assume	addr:absolute
		bcc		($1234)     ; abi -> ab*
		assume	addr:absolute
		bcc		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		bcc		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		bcc		($1234)     ; abi -> zp*
		assume	addr:zeropage
		bcc		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		bcc		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		bcc		$1234,x     ; abx -> ab*
		assume	addr:absolute
		bcc		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		bcc		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		bcc		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		bcc		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		bcc		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		bcc		$1234,y     ; aby -> ab*
		assume	addr:absolute
		bcc		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		bcc		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		bcc		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		bcc		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		bcc		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		bcc		A           ; acc -> ab*
		assume	addr:absolute
		bcc		a           ; acc -> ab*
		assume	addr:zeropage
		bcc		A           ; acc -> zp*
		assume	addr:zeropage
		bcc		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		bcc		            ; acc_i -> ab*
		assume	addr:zeropage
		bcc		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		bcc		#$12        ; imm -> ab*
		assume	addr:absolute
		bcc		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		bcc		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		bcc		#$12        ; imm -> zp*
		assume	addr:zeropage
		bcc		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		bcc		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		bcc		            ; imp -> ab*
		assume	addr:zeropage
		bcc		            ; imp -> zp*

		; pcr

		assume	addr:absolute
		bcc		+           ; pcr -> ab*
		assume	addr:absolute
		bcc		-           ; pcr -> ab*
		assume	addr:zeropage
		bcc		+           ; pcr -> zp*
		assume	addr:zeropage
		bcc		-           ; pcr -> zp*

		; zp

		assume	addr:absolute
		bcc		$12         ; zp -> ab*
		assume	addr:absolute
		bcc		bakbyt      ; zp -> ab*
		assume	addr:absolute
		bcc		fwdbyt      ; zp -> ab*
		assume	addr:zeropage
		bcc		$12         ; zp -> zp*
		assume	addr:zeropage
		bcc		bakbyt      ; zp -> zp*
		assume	addr:zeropage
		bcc		fwdbyt      ; zp -> zp*

		; zpiy

		assume	addr:absolute
		bcc		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		bcc		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		bcc		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		bcc		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		bcc		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		bcc		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		bcc		$12,x       ; zpx -> ab*
		assume	addr:absolute
		bcc		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		bcc		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		bcc		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		bcc		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		bcc		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		bcc		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		bcc		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		bcc		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		bcc		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		bcc		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		bcc		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		bcc		$12,y       ; zpy -> ab*
		assume	addr:absolute
		bcc		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		bcc		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		bcc		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		bcc		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		bcc		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; BIT

 -
		; abi

		assume	addr:absolute
		bit		($1234)     ; abi -> ab*
		assume	addr:absolute
		bit		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		bit		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		bit		($1234)     ; abi -> zp*
		assume	addr:zeropage
		bit		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		bit		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		bit		$1234,x     ; abx -> ab*
		assume	addr:absolute
		bit		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		bit		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		bit		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		bit		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		bit		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		bit		$1234,y     ; aby -> ab*
		assume	addr:absolute
		bit		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		bit		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		bit		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		bit		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		bit		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		bit		A           ; acc -> ab*
		assume	addr:absolute
		bit		a           ; acc -> ab*
		assume	addr:zeropage
		bit		A           ; acc -> zp*
		assume	addr:zeropage
		bit		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		bit		            ; acc_i -> ab*
		assume	addr:zeropage
		bit		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		bit		#$12        ; imm -> ab*
		assume	addr:absolute
		bit		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		bit		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		bit		#$12        ; imm -> zp*
		assume	addr:zeropage
		bit		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		bit		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		bit		            ; imp -> ab*
		assume	addr:zeropage
		bit		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		bit		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		bit		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		bit		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		bit		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		bit		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		bit		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		bit		$12,x       ; zpx -> ab*
		assume	addr:absolute
		bit		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		bit		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		bit		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		bit		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		bit		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		bit		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		bit		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		bit		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		bit		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		bit		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		bit		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		bit		$12,y       ; zpy -> ab*
		assume	addr:absolute
		bit		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		bit		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		bit		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		bit		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		bit		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; BRK

 -
		; ab

		assume	addr:absolute
		brk		$1234       ; ab -> ab*
		assume	addr:absolute
		brk		bakwrd      ; ab -> ab*
		assume	addr:absolute
		brk		fwdwrd      ; ab -> ab*

		; abi

		assume	addr:absolute
		brk		($1234)     ; abi -> ab*
		assume	addr:absolute
		brk		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		brk		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		brk		($1234)     ; abi -> zp*
		assume	addr:zeropage
		brk		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		brk		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		brk		$1234,x     ; abx -> ab*
		assume	addr:absolute
		brk		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		brk		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		brk		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		brk		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		brk		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		brk		$1234,y     ; aby -> ab*
		assume	addr:absolute
		brk		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		brk		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		brk		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		brk		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		brk		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		brk		A           ; acc -> ab*
		assume	addr:absolute
		brk		a           ; acc -> ab*
		assume	addr:zeropage
		brk		A           ; acc -> zp*
		assume	addr:zeropage
		brk		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		brk		            ; acc_i -> ab*
		assume	addr:zeropage
		brk		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		brk		#$12        ; imm -> ab*
		assume	addr:absolute
		brk		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		brk		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		brk		#$12        ; imm -> zp*
		assume	addr:zeropage
		brk		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		brk		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		brk		            ; imp -> ab*
		assume	addr:zeropage
		brk		            ; imp -> zp*

		; pcr

		assume	addr:absolute
		brk		+           ; pcr -> ab*
		assume	addr:absolute
		brk		-           ; pcr -> ab*

		; zp

		assume	addr:absolute
		brk		$12         ; zp -> ab*
		assume	addr:absolute
		brk		bakbyt      ; zp -> ab*
		assume	addr:absolute
		brk		fwdbyt      ; zp -> ab*

		; zpiy

		assume	addr:absolute
		brk		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		brk		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		brk		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		brk		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		brk		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		brk		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		brk		$12,x       ; zpx -> ab*
		assume	addr:absolute
		brk		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		brk		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		brk		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		brk		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		brk		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		brk		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		brk		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		brk		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		brk		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		brk		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		brk		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		brk		$12,y       ; zpy -> ab*
		assume	addr:absolute
		brk		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		brk		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		brk		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		brk		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		brk		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; CLC
		; CLD
		; CLI
		; CLV
		; DEX
		; DEY
		; INX
		; INY
		; NOP
		; PHA
		; PHP
		; PLA
		; PLP
		; RTI
		; RTS
		; SEC
		; SED
		; SEI
		; TAX
		; TAY
		; TSX
		; TXA
		; TXS
		; TYA

 -
		; ab

		assume	addr:absolute
		clc		$1234       ; ab -> ab*
		assume	addr:absolute
		clc		bakwrd      ; ab -> ab*
		assume	addr:absolute
		clc		fwdwrd      ; ab -> ab*
		assume	addr:zeropage
		clc		$1234       ; ab -> zp*
		assume	addr:zeropage
		clc		bakwrd      ; ab -> zp*
		assume	addr:zeropage
		clc		fwdwrd      ; ab -> zp*

		; abi

		assume	addr:absolute
		clc		($1234)     ; abi -> ab*
		assume	addr:absolute
		clc		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		clc		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		clc		($1234)     ; abi -> zp*
		assume	addr:zeropage
		clc		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		clc		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		clc		$1234,x     ; abx -> ab*
		assume	addr:absolute
		clc		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		clc		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		clc		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		clc		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		clc		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		clc		$1234,y     ; aby -> ab*
		assume	addr:absolute
		clc		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		clc		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		clc		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		clc		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		clc		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		clc		A           ; acc -> ab*
		assume	addr:absolute
		clc		a           ; acc -> ab*
		assume	addr:zeropage
		clc		A           ; acc -> zp*
		assume	addr:zeropage
		clc		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		clc		            ; acc_i -> ab*
		assume	addr:zeropage
		clc		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		clc		#$12        ; imm -> ab*
		assume	addr:absolute
		clc		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		clc		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		clc		#$12        ; imm -> zp*
		assume	addr:zeropage
		clc		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		clc		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		clc		            ; imp -> ab*
		assume	addr:zeropage
		clc		            ; imp -> zp*

		; pcr

		assume	addr:absolute
		clc		+           ; pcr -> ab*
		assume	addr:absolute
		clc		-           ; pcr -> ab*
		assume	addr:zeropage
		clc		+           ; pcr -> zp*
		assume	addr:zeropage
		clc		-           ; pcr -> zp*

		; zp

		assume	addr:absolute
		clc		$12         ; zp -> ab*
		assume	addr:absolute
		clc		bakbyt      ; zp -> ab*
		assume	addr:absolute
		clc		fwdbyt      ; zp -> ab*
		assume	addr:zeropage
		clc		$12         ; zp -> zp*
		assume	addr:zeropage
		clc		bakbyt      ; zp -> zp*
		assume	addr:zeropage
		clc		fwdbyt      ; zp -> zp*

		; zpiy

		assume	addr:absolute
		clc		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		clc		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		clc		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		clc		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		clc		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		clc		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		clc		$12,x       ; zpx -> ab*
		assume	addr:absolute
		clc		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		clc		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		clc		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		clc		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		clc		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		clc		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		clc		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		clc		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		clc		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		clc		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		clc		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		clc		$12,y       ; zpy -> ab*
		assume	addr:absolute
		clc		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		clc		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		clc		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		clc		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		clc		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; CPX
		; CPY

 -
		; abi

		assume	addr:absolute
		cpx		($1234)     ; abi -> ab*
		assume	addr:absolute
		cpx		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		cpx		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		cpx		($1234)     ; abi -> zp*
		assume	addr:zeropage
		cpx		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		cpx		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		cpx		$1234,x     ; abx -> ab*
		assume	addr:absolute
		cpx		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		cpx		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		cpx		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		cpx		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		cpx		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		cpx		$1234,y     ; aby -> ab*
		assume	addr:absolute
		cpx		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		cpx		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		cpx		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		cpx		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		cpx		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		cpx		A           ; acc -> ab*
		assume	addr:absolute
		cpx		a           ; acc -> ab*
		assume	addr:zeropage
		cpx		A           ; acc -> zp*
		assume	addr:zeropage
		cpx		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		cpx		            ; acc_i -> ab*
		assume	addr:zeropage
		cpx		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		cpx		#$12        ; imm -> ab*
		assume	addr:absolute
		cpx		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		cpx		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		cpx		#$12        ; imm -> zp*
		assume	addr:zeropage
		cpx		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		cpx		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		cpx		            ; imp -> ab*
		assume	addr:zeropage
		cpx		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		cpx		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		cpx		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		cpx		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		cpx		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		cpx		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		cpx		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		cpx		$12,x       ; zpx -> ab*
		assume	addr:absolute
		cpx		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		cpx		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		cpx		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		cpx		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		cpx		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		cpx		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		cpx		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		cpx		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		cpx		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		cpx		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		cpx		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		cpx		$12,y       ; zpy -> ab*
		assume	addr:absolute
		cpx		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		cpx		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		cpx		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		cpx		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		cpx		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; DEC
		; INC

 -
		; abi

		assume	addr:absolute
		dec		($1234)     ; abi -> ab*
		assume	addr:absolute
		dec		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		dec		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		dec		($1234)     ; abi -> zp*
		assume	addr:zeropage
		dec		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		dec		(fwdwrd)    ; abi -> zp*

		; aby

		assume	addr:absolute
		dec		$1234,y     ; aby -> ab*
		assume	addr:absolute
		dec		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		dec		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		dec		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		dec		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		dec		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		dec		A           ; acc -> ab*
		assume	addr:absolute
		dec		a           ; acc -> ab*
		assume	addr:zeropage
		dec		A           ; acc -> zp*
		assume	addr:zeropage
		dec		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		dec		            ; acc_i -> ab*
		assume	addr:zeropage
		dec		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		dec		#$12        ; imm -> ab*
		assume	addr:absolute
		dec		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		dec		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		dec		#$12        ; imm -> zp*
		assume	addr:zeropage
		dec		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		dec		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		dec		            ; imp -> ab*
		assume	addr:zeropage
		dec		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		dec		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		dec		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		dec		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		dec		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		dec		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		dec		(fwdbyt),y  ; zpiy -> zp*

		; zpxi

		assume	addr:absolute
		dec		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		dec		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		dec		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		dec		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		dec		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		dec		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		dec		$12,y       ; zpy -> ab*
		assume	addr:absolute
		dec		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		dec		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		dec		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		dec		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		dec		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; JMP

 -
		; ab

		assume	addr:zeropage
		jmp		$1234       ; ab -> zp*
		assume	addr:zeropage
		jmp		bakwrd      ; ab -> zp*
		assume	addr:zeropage
		jmp		fwdwrd      ; ab -> zp*

		; abi

		assume	addr:zeropage
		jmp		($1234)     ; abi -> zp*
		assume	addr:zeropage
		jmp		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		jmp		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		jmp		$1234,x     ; abx -> ab*
		assume	addr:absolute
		jmp		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		jmp		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		jmp		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		jmp		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		jmp		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		jmp		$1234,y     ; aby -> ab*
		assume	addr:absolute
		jmp		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		jmp		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		jmp		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		jmp		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		jmp		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		jmp		A           ; acc -> ab*
		assume	addr:absolute
		jmp		a           ; acc -> ab*
		assume	addr:zeropage
		jmp		A           ; acc -> zp*
		assume	addr:zeropage
		jmp		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		jmp		            ; acc_i -> ab*
		assume	addr:zeropage
		jmp		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		jmp		#$12        ; imm -> ab*
		assume	addr:absolute
		jmp		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		jmp		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		jmp		#$12        ; imm -> zp*
		assume	addr:zeropage
		jmp		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		jmp		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		jmp		            ; imp -> ab*
		assume	addr:zeropage
		jmp		            ; imp -> zp*

		; pcr

		assume	addr:zeropage
		jmp		+           ; pcr -> zp*
		assume	addr:zeropage
		jmp		-           ; pcr -> zp*

		; zp

		assume	addr:zeropage
		jmp		$12         ; zp -> zp*
		assume	addr:zeropage
		jmp		bakbyt      ; zp -> zp*
		assume	addr:zeropage
		jmp		fwdbyt      ; zp -> zp*

		; zpiy

		assume	addr:absolute
		jmp		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		jmp		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		jmp		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		jmp		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		jmp		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		jmp		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		jmp		$12,x       ; zpx -> ab*
		assume	addr:absolute
		jmp		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		jmp		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		jmp		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		jmp		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		jmp		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		jmp		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		jmp		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		jmp		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		jmp		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		jmp		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		jmp		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		jmp		$12,y       ; zpy -> ab*
		assume	addr:absolute
		jmp		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		jmp		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		jmp		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		jmp		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		jmp		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; JSR

 -
		; ab

		assume	addr:zeropage
		jsr		$1234       ; ab -> zp*
		assume	addr:zeropage
		jsr		bakwrd      ; ab -> zp*
		assume	addr:zeropage
		jsr		fwdwrd      ; ab -> zp*

		; abi

		assume	addr:absolute
		jsr		($1234)     ; abi -> ab*
		assume	addr:absolute
		jsr		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		jsr		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		jsr		($1234)     ; abi -> zp*
		assume	addr:zeropage
		jsr		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		jsr		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		jsr		$1234,x     ; abx -> ab*
		assume	addr:absolute
		jsr		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		jsr		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		jsr		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		jsr		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		jsr		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		jsr		$1234,y     ; aby -> ab*
		assume	addr:absolute
		jsr		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		jsr		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		jsr		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		jsr		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		jsr		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		jsr		A           ; acc -> ab*
		assume	addr:absolute
		jsr		a           ; acc -> ab*
		assume	addr:zeropage
		jsr		A           ; acc -> zp*
		assume	addr:zeropage
		jsr		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		jsr		            ; acc_i -> ab*
		assume	addr:zeropage
		jsr		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		jsr		#$12        ; imm -> ab*
		assume	addr:absolute
		jsr		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		jsr		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		jsr		#$12        ; imm -> zp*
		assume	addr:zeropage
		jsr		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		jsr		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		jsr		            ; imp -> ab*
		assume	addr:zeropage
		jsr		            ; imp -> zp*

		; pcr

		assume	addr:zeropage
		jsr		+           ; pcr -> zp*
		assume	addr:zeropage
		jsr		-           ; pcr -> zp*

		; zp

		assume	addr:zeropage
		jsr		$12         ; zp -> zp*
		assume	addr:zeropage
		jsr		bakbyt      ; zp -> zp*
		assume	addr:zeropage
		jsr		fwdbyt      ; zp -> zp*

		; zpiy

		assume	addr:absolute
		jsr		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		jsr		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		jsr		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		jsr		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		jsr		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		jsr		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		jsr		$12,x       ; zpx -> ab*
		assume	addr:absolute
		jsr		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		jsr		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		jsr		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		jsr		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		jsr		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		jsr		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		jsr		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		jsr		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		jsr		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		jsr		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		jsr		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		jsr		$12,y       ; zpy -> ab*
		assume	addr:absolute
		jsr		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		jsr		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		jsr		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		jsr		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		jsr		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; LDX

 -
		; abi

		assume	addr:absolute
		ldx		($1234)     ; abi -> ab*
		assume	addr:absolute
		ldx		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		ldx		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		ldx		($1234)     ; abi -> zp*
		assume	addr:zeropage
		ldx		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		ldx		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		ldx		$1234,x     ; abx -> ab*
		assume	addr:absolute
		ldx		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		ldx		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		ldx		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		ldx		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		ldx		fwdwrd,x    ; abx -> zp*

		; acc

		assume	addr:absolute
		ldx		A           ; acc -> ab*
		assume	addr:absolute
		ldx		a           ; acc -> ab*
		assume	addr:zeropage
		ldx		A           ; acc -> zp*
		assume	addr:zeropage
		ldx		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		ldx		            ; acc_i -> ab*
		assume	addr:zeropage
		ldx		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		ldx		#$12        ; imm -> ab*
		assume	addr:absolute
		ldx		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		ldx		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		ldx		#$12        ; imm -> zp*
		assume	addr:zeropage
		ldx		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		ldx		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		ldx		            ; imp -> ab*
		assume	addr:zeropage
		ldx		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		ldx		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		ldx		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		ldx		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		ldx		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		ldx		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		ldx		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		ldx		$12,x       ; zpx -> ab*
		assume	addr:absolute
		ldx		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		ldx		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		ldx		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		ldx		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		ldx		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		ldx		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		ldx		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		ldx		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		ldx		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		ldx		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		ldx		(fwdbyt,x)  ; zpxi -> zp*

 +

		; check:
		; LDY

 -
		; abi

		assume	addr:absolute
		ldy		($1234)     ; abi -> ab*
		assume	addr:absolute
		ldy		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		ldy		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		ldy		($1234)     ; abi -> zp*
		assume	addr:zeropage
		ldy		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		ldy		(fwdwrd)    ; abi -> zp*

		; aby

		assume	addr:absolute
		ldy		$1234,y     ; aby -> ab*
		assume	addr:absolute
		ldy		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		ldy		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		ldy		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		ldy		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		ldy		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		ldy		A           ; acc -> ab*
		assume	addr:absolute
		ldy		a           ; acc -> ab*
		assume	addr:zeropage
		ldy		A           ; acc -> zp*
		assume	addr:zeropage
		ldy		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		ldy		            ; acc_i -> ab*
		assume	addr:zeropage
		ldy		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		ldy		#$12        ; imm -> ab*
		assume	addr:absolute
		ldy		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		ldy		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		ldy		#$12        ; imm -> zp*
		assume	addr:zeropage
		ldy		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		ldy		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		ldy		            ; imp -> ab*
		assume	addr:zeropage
		ldy		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		ldy		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		ldy		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		ldy		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		ldy		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		ldy		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		ldy		(fwdbyt),y  ; zpiy -> zp*

		; zpxi

		assume	addr:absolute
		ldy		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		ldy		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		ldy		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		ldy		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		ldy		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		ldy		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		ldy		$12,y       ; zpy -> ab*
		assume	addr:absolute
		ldy		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		ldy		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		ldy		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		ldy		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		ldy		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; STA

 -
		; abi

		assume	addr:absolute
		sta		($1234)     ; abi -> ab*
		assume	addr:absolute
		sta		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		sta		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		sta		($1234)     ; abi -> zp*
		assume	addr:zeropage
		sta		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		sta		(fwdwrd)    ; abi -> zp*

		; aby

		assume	addr:zeropage
		sta		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		sta		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		sta		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		sta		A           ; acc -> ab*
		assume	addr:absolute
		sta		a           ; acc -> ab*
		assume	addr:zeropage
		sta		A           ; acc -> zp*
		assume	addr:zeropage
		sta		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		sta		            ; acc_i -> ab*
		assume	addr:zeropage
		sta		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		sta		#$12        ; imm -> ab*
		assume	addr:absolute
		sta		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		sta		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		sta		#$12        ; imm -> zp*
		assume	addr:zeropage
		sta		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		sta		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		sta		            ; imp -> ab*
		assume	addr:zeropage
		sta		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		sta		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		sta		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		sta		(fwdbyt),y  ; zpiy -> ab*

		; zpxi

		assume	addr:absolute
		sta		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		sta		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		sta		(fwdbyt,x)  ; zpxi -> ab*

		; zpy

		assume	addr:zeropage
		sta		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		sta		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		sta		fwdbyt,y    ; zpy -> zp*

 +

		; check:
		; STX

 -
		; abi

		assume	addr:absolute
		stx		($1234)     ; abi -> ab*
		assume	addr:absolute
		stx		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		stx		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		stx		($1234)     ; abi -> zp*
		assume	addr:zeropage
		stx		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		stx		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		stx		$1234,x     ; abx -> ab*
		assume	addr:absolute
		stx		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		stx		fwdwrd,x    ; abx -> ab*
		assume	addr:zeropage
		stx		$1234,x     ; abx -> zp*
		assume	addr:zeropage
		stx		bakwrd,x    ; abx -> zp*
		assume	addr:zeropage
		stx		fwdwrd,x    ; abx -> zp*

		; aby

		assume	addr:absolute
		stx		$1234,y     ; aby -> ab*
		assume	addr:absolute
		stx		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		stx		fwdwrd,y    ; aby -> ab*

		; acc

		assume	addr:absolute
		stx		A           ; acc -> ab*
		assume	addr:absolute
		stx		a           ; acc -> ab*
		assume	addr:zeropage
		stx		A           ; acc -> zp*
		assume	addr:zeropage
		stx		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		stx		            ; acc_i -> ab*
		assume	addr:zeropage
		stx		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		stx		#$12        ; imm -> ab*
		assume	addr:absolute
		stx		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		stx		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		stx		#$12        ; imm -> zp*
		assume	addr:zeropage
		stx		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		stx		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		stx		            ; imp -> ab*
		assume	addr:zeropage
		stx		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		stx		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		stx		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		stx		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		stx		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		stx		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		stx		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		stx		$12,x       ; zpx -> ab*
		assume	addr:absolute
		stx		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		stx		fwdbyt,x    ; zpx -> ab*
		assume	addr:zeropage
		stx		$12,x       ; zpx -> zp*
		assume	addr:zeropage
		stx		bakbyt,x    ; zpx -> zp*
		assume	addr:zeropage
		stx		fwdbyt,x    ; zpx -> zp*

		; zpxi

		assume	addr:absolute
		stx		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		stx		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		stx		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		stx		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		stx		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		stx		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		stx		$12,y       ; zpy -> ab*
		assume	addr:absolute
		stx		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		stx		fwdbyt,y    ; zpy -> ab*

 +

		; check:
		; STY

 -
		; abi

		assume	addr:absolute
		sty		($1234)     ; abi -> ab*
		assume	addr:absolute
		sty		(bakwrd)    ; abi -> ab*
		assume	addr:absolute
		sty		(fwdwrd)    ; abi -> ab*
		assume	addr:zeropage
		sty		($1234)     ; abi -> zp*
		assume	addr:zeropage
		sty		(bakwrd)    ; abi -> zp*
		assume	addr:zeropage
		sty		(fwdwrd)    ; abi -> zp*

		; abx

		assume	addr:absolute
		sty		$1234,x     ; abx -> ab*
		assume	addr:absolute
		sty		bakwrd,x    ; abx -> ab*
		assume	addr:absolute
		sty		fwdwrd,x    ; abx -> ab*

		; aby

		assume	addr:absolute
		sty		$1234,y     ; aby -> ab*
		assume	addr:absolute
		sty		bakwrd,y    ; aby -> ab*
		assume	addr:absolute
		sty		fwdwrd,y    ; aby -> ab*
		assume	addr:zeropage
		sty		$1234,y     ; aby -> zp*
		assume	addr:zeropage
		sty		bakwrd,y    ; aby -> zp*
		assume	addr:zeropage
		sty		fwdwrd,y    ; aby -> zp*

		; acc

		assume	addr:absolute
		sty		A           ; acc -> ab*
		assume	addr:absolute
		sty		a           ; acc -> ab*
		assume	addr:zeropage
		sty		A           ; acc -> zp*
		assume	addr:zeropage
		sty		a           ; acc -> zp*

		; acc_i

		assume	addr:absolute
		sty		            ; acc_i -> ab*
		assume	addr:zeropage
		sty		            ; acc_i -> zp*

		; imm

		assume	addr:absolute
		sty		#$12        ; imm -> ab*
		assume	addr:absolute
		sty		#bakbyt     ; imm -> ab*
		assume	addr:absolute
		sty		#fwdbyt     ; imm -> ab*
		assume	addr:zeropage
		sty		#$12        ; imm -> zp*
		assume	addr:zeropage
		sty		#bakbyt     ; imm -> zp*
		assume	addr:zeropage
		sty		#fwdbyt     ; imm -> zp*

		; imp

		assume	addr:absolute
		sty		            ; imp -> ab*
		assume	addr:zeropage
		sty		            ; imp -> zp*

		; zpiy

		assume	addr:absolute
		sty		($12),y     ; zpiy -> ab*
		assume	addr:absolute
		sty		(bakbyt),y  ; zpiy -> ab*
		assume	addr:absolute
		sty		(fwdbyt),y  ; zpiy -> ab*
		assume	addr:zeropage
		sty		($12),y     ; zpiy -> zp*
		assume	addr:zeropage
		sty		(bakbyt),y  ; zpiy -> zp*
		assume	addr:zeropage
		sty		(fwdbyt),y  ; zpiy -> zp*

		; zpx

		assume	addr:absolute
		sty		$12,x       ; zpx -> ab*
		assume	addr:absolute
		sty		bakbyt,x    ; zpx -> ab*
		assume	addr:absolute
		sty		fwdbyt,x    ; zpx -> ab*

		; zpxi

		assume	addr:absolute
		sty		($12,x)     ; zpxi -> ab*
		assume	addr:absolute
		sty		(bakbyt,x)  ; zpxi -> ab*
		assume	addr:absolute
		sty		(fwdbyt,x)  ; zpxi -> ab*
		assume	addr:zeropage
		sty		($12,x)     ; zpxi -> zp*
		assume	addr:zeropage
		sty		(bakbyt,x)  ; zpxi -> zp*
		assume	addr:zeropage
		sty		(fwdbyt,x)  ; zpxi -> zp*

		; zpy

		assume	addr:absolute
		sty		$12,y       ; zpy -> ab*
		assume	addr:absolute
		sty		bakbyt,y    ; zpy -> ab*
		assume	addr:absolute
		sty		fwdbyt,y    ; zpy -> ab*
		assume	addr:zeropage
		sty		$12,y       ; zpy -> zp*
		assume	addr:zeropage
		sty		bakbyt,y    ; zpy -> zp*
		assume	addr:zeropage
		sty		fwdbyt,y    ; zpy -> zp*

 +

; errs = 785

; forward reference

fwdbyt	.equ	$12
fwdwrd	.equ	$1234

; -------------------------------

		.end
