; Hobby Cross-Assembler Processor Test 001b
; 6502\Instruction Set
; ok: forced address modes

; generated by MODE65.AWK - Thu Jul 12 11:38:23 2007

; no errors to detect

; -------------------------------

		.listfile
		.errfile

; -------------------------------

        .cpu    "6502"      ; required psop
        .org    $1000       ; required psop

; -------------------------------

; backward reference

bakbyt	.equ	$12
bakwrd	.equ	$1234

		; check:
		; ADC
		; AND
		; CMP
		; EOR
		; LDA
		; ORA
		; SBC

 -
		; ab

		assume	addr:absolute
		adc		$1234       ; ab -> ab
		assume	addr:absolute
		adc		bakwrd      ; ab -> ab
		assume	addr:absolute
		adc		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		adc		$1234       ; ab -> zp
		assume	addr:zeropage
		adc		bakwrd      ; ab -> zp
		assume	addr:zeropage
		adc		fwdwrd      ; ab -> zp

		; abx

		assume	addr:absolute
		adc		$1234,x     ; abx -> abx
		assume	addr:absolute
		adc		bakwrd,x    ; abx -> abx
		assume	addr:absolute
		adc		fwdwrd,x    ; abx -> abx
		assume	addr:zeropage
		adc		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		adc		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		adc		fwdwrd,x    ; abx -> zpx

		; aby

		assume	addr:absolute
		adc		$1234,y     ; aby -> aby
		assume	addr:absolute
		adc		bakwrd,y    ; aby -> aby
		assume	addr:absolute
		adc		fwdwrd,y    ; aby -> aby

		; pcr

		assume	addr:absolute
		adc		+           ; pcr -> ab
		assume	addr:absolute
		adc		-           ; pcr -> ab
		assume	addr:zeropage
		adc		+           ; pcr -> zp
		assume	addr:zeropage
		adc		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		adc		$12         ; zp -> ab
		assume	addr:absolute
		adc		bakbyt      ; zp -> ab
		assume	addr:absolute
		adc		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		adc		$12         ; zp -> zp
		assume	addr:zeropage
		adc		bakbyt      ; zp -> zp
		assume	addr:zeropage
		adc		fwdbyt      ; zp -> zp

		; zpiy

		assume	addr:zeropage
		adc		($12),y     ; zpiy -> zpiy
		assume	addr:zeropage
		adc		(bakbyt),y  ; zpiy -> zpiy
		assume	addr:zeropage
		adc		(fwdbyt),y  ; zpiy -> zpiy

		; zpx

		assume	addr:absolute
		adc		$12,x       ; zpx -> abx
		assume	addr:absolute
		adc		bakbyt,x    ; zpx -> abx
		assume	addr:absolute
		adc		fwdbyt,x    ; zpx -> abx
		assume	addr:zeropage
		adc		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		adc		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		adc		fwdbyt,x    ; zpx -> zpx

		; zpxi

		assume	addr:zeropage
		adc		($12,x)     ; zpxi -> zpxi
		assume	addr:zeropage
		adc		(bakbyt,x)  ; zpxi -> zpxi
		assume	addr:zeropage
		adc		(fwdbyt,x)  ; zpxi -> zpxi

		; zpy

		assume	addr:absolute
		adc		$12,y       ; zpy -> aby
		assume	addr:absolute
		adc		bakbyt,y    ; zpy -> aby
		assume	addr:absolute
		adc		fwdbyt,y    ; zpy -> aby

 +

		; check:
		; ASL
		; LSR
		; ROL
		; ROR

 -
		; ab

		assume	addr:absolute
		asl		$1234       ; ab -> ab
		assume	addr:absolute
		asl		bakwrd      ; ab -> ab
		assume	addr:absolute
		asl		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		asl		$1234       ; ab -> zp
		assume	addr:zeropage
		asl		bakwrd      ; ab -> zp
		assume	addr:zeropage
		asl		fwdwrd      ; ab -> zp

		; abx

		assume	addr:absolute
		asl		$1234,x     ; abx -> abx
		assume	addr:absolute
		asl		bakwrd,x    ; abx -> abx
		assume	addr:absolute
		asl		fwdwrd,x    ; abx -> abx
		assume	addr:zeropage
		asl		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		asl		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		asl		fwdwrd,x    ; abx -> zpx

		; pcr

		assume	addr:absolute
		asl		+           ; pcr -> ab
		assume	addr:absolute
		asl		-           ; pcr -> ab
		assume	addr:zeropage
		asl		+           ; pcr -> zp
		assume	addr:zeropage
		asl		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		asl		$12         ; zp -> ab
		assume	addr:absolute
		asl		bakbyt      ; zp -> ab
		assume	addr:absolute
		asl		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		asl		$12         ; zp -> zp
		assume	addr:zeropage
		asl		bakbyt      ; zp -> zp
		assume	addr:zeropage
		asl		fwdbyt      ; zp -> zp

		; zpx

		assume	addr:absolute
		asl		$12,x       ; zpx -> abx
		assume	addr:absolute
		asl		bakbyt,x    ; zpx -> abx
		assume	addr:absolute
		asl		fwdbyt,x    ; zpx -> abx
		assume	addr:zeropage
		asl		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		asl		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		asl		fwdbyt,x    ; zpx -> zpx

 +

		; check:
		; BCC
		; BCS
		; BEQ
		; BGE
		; BLT
		; BMI
		; BNE
		; BPL
		; BVC
		; BVS

 -
 +

		; check:
		; BIT

 -
		; ab

		assume	addr:absolute
		bit		$1234       ; ab -> ab
		assume	addr:absolute
		bit		bakwrd      ; ab -> ab
		assume	addr:absolute
		bit		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		bit		$1234       ; ab -> zp
		assume	addr:zeropage
		bit		bakwrd      ; ab -> zp
		assume	addr:zeropage
		bit		fwdwrd      ; ab -> zp

		; pcr

		assume	addr:absolute
		bit		+           ; pcr -> ab
		assume	addr:absolute
		bit		-           ; pcr -> ab
		assume	addr:zeropage
		bit		+           ; pcr -> zp
		assume	addr:zeropage
		bit		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		bit		$12         ; zp -> ab
		assume	addr:absolute
		bit		bakbyt      ; zp -> ab
		assume	addr:absolute
		bit		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		bit		$12         ; zp -> zp
		assume	addr:zeropage
		bit		bakbyt      ; zp -> zp
		assume	addr:zeropage
		bit		fwdbyt      ; zp -> zp

 +

		; check:
		; BRK

 -
		; ab

		assume	addr:zeropage
		brk		$1234       ; ab -> zp
		assume	addr:zeropage
		brk		bakwrd      ; ab -> zp
		assume	addr:zeropage
		brk		fwdwrd      ; ab -> zp

		; pcr

		assume	addr:zeropage
		brk		+           ; pcr -> zp
		assume	addr:zeropage
		brk		-           ; pcr -> zp

		; zp

		assume	addr:zeropage
		brk		$12         ; zp -> zp
		assume	addr:zeropage
		brk		bakbyt      ; zp -> zp
		assume	addr:zeropage
		brk		fwdbyt      ; zp -> zp

 +

		; check:
		; CLC
		; CLD
		; CLI
		; CLV
		; DEX
		; DEY
		; INX
		; INY
		; NOP
		; PHA
		; PHP
		; PLA
		; PLP
		; RTI
		; RTS
		; SEC
		; SED
		; SEI
		; TAX
		; TAY
		; TSX
		; TXA
		; TXS
		; TYA

 -
 +

		; check:
		; CPX
		; CPY

 -
		; ab

		assume	addr:absolute
		cpx		$1234       ; ab -> ab
		assume	addr:absolute
		cpx		bakwrd      ; ab -> ab
		assume	addr:absolute
		cpx		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		cpx		$1234       ; ab -> zp
		assume	addr:zeropage
		cpx		bakwrd      ; ab -> zp
		assume	addr:zeropage
		cpx		fwdwrd      ; ab -> zp

		; pcr

		assume	addr:absolute
		cpx		+           ; pcr -> ab
		assume	addr:absolute
		cpx		-           ; pcr -> ab
		assume	addr:zeropage
		cpx		+           ; pcr -> zp
		assume	addr:zeropage
		cpx		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		cpx		$12         ; zp -> ab
		assume	addr:absolute
		cpx		bakbyt      ; zp -> ab
		assume	addr:absolute
		cpx		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		cpx		$12         ; zp -> zp
		assume	addr:zeropage
		cpx		bakbyt      ; zp -> zp
		assume	addr:zeropage
		cpx		fwdbyt      ; zp -> zp

 +

		; check:
		; DEC
		; INC

 -
		; ab

		assume	addr:absolute
		dec		$1234       ; ab -> ab
		assume	addr:absolute
		dec		bakwrd      ; ab -> ab
		assume	addr:absolute
		dec		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		dec		$1234       ; ab -> zp
		assume	addr:zeropage
		dec		bakwrd      ; ab -> zp
		assume	addr:zeropage
		dec		fwdwrd      ; ab -> zp

		; abx

		assume	addr:absolute
		dec		$1234,x     ; abx -> abx
		assume	addr:absolute
		dec		bakwrd,x    ; abx -> abx
		assume	addr:absolute
		dec		fwdwrd,x    ; abx -> abx
		assume	addr:zeropage
		dec		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		dec		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		dec		fwdwrd,x    ; abx -> zpx

		; pcr

		assume	addr:absolute
		dec		+           ; pcr -> ab
		assume	addr:absolute
		dec		-           ; pcr -> ab
		assume	addr:zeropage
		dec		+           ; pcr -> zp
		assume	addr:zeropage
		dec		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		dec		$12         ; zp -> ab
		assume	addr:absolute
		dec		bakbyt      ; zp -> ab
		assume	addr:absolute
		dec		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		dec		$12         ; zp -> zp
		assume	addr:zeropage
		dec		bakbyt      ; zp -> zp
		assume	addr:zeropage
		dec		fwdbyt      ; zp -> zp

		; zpx

		assume	addr:absolute
		dec		$12,x       ; zpx -> abx
		assume	addr:absolute
		dec		bakbyt,x    ; zpx -> abx
		assume	addr:absolute
		dec		fwdbyt,x    ; zpx -> abx
		assume	addr:zeropage
		dec		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		dec		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		dec		fwdbyt,x    ; zpx -> zpx

 +

		; check:
		; JMP

 -
		; ab

		assume	addr:absolute
		jmp		$1234       ; ab -> ab
		assume	addr:absolute
		jmp		bakwrd      ; ab -> ab
		assume	addr:absolute
		jmp		fwdwrd      ; ab -> ab

		; abi

		assume	addr:absolute
		jmp		($1234)     ; abi -> abi
		assume	addr:absolute
		jmp		(bakwrd)    ; abi -> abi
		assume	addr:absolute
		jmp		(fwdwrd)    ; abi -> abi

		; pcr

		assume	addr:absolute
		jmp		+           ; pcr -> ab
		assume	addr:absolute
		jmp		-           ; pcr -> ab

		; zp

		assume	addr:absolute
		jmp		$12         ; zp -> ab
		assume	addr:absolute
		jmp		bakbyt      ; zp -> ab
		assume	addr:absolute
		jmp		fwdbyt      ; zp -> ab

 +

		; check:
		; JSR

 -
		; ab

		assume	addr:absolute
		jsr		$1234       ; ab -> ab
		assume	addr:absolute
		jsr		bakwrd      ; ab -> ab
		assume	addr:absolute
		jsr		fwdwrd      ; ab -> ab

		; pcr

		assume	addr:absolute
		jsr		+           ; pcr -> ab
		assume	addr:absolute
		jsr		-           ; pcr -> ab

		; zp

		assume	addr:absolute
		jsr		$12         ; zp -> ab
		assume	addr:absolute
		jsr		bakbyt      ; zp -> ab
		assume	addr:absolute
		jsr		fwdbyt      ; zp -> ab

 +

		; check:
		; LDX

 -
		; ab

		assume	addr:absolute
		ldx		$1234       ; ab -> ab
		assume	addr:absolute
		ldx		bakwrd      ; ab -> ab
		assume	addr:absolute
		ldx		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		ldx		$1234       ; ab -> zp
		assume	addr:zeropage
		ldx		bakwrd      ; ab -> zp
		assume	addr:zeropage
		ldx		fwdwrd      ; ab -> zp

		; aby

		assume	addr:absolute
		ldx		$1234,y     ; aby -> aby
		assume	addr:absolute
		ldx		bakwrd,y    ; aby -> aby
		assume	addr:absolute
		ldx		fwdwrd,y    ; aby -> aby
		assume	addr:zeropage
		ldx		$1234,y     ; aby -> zpy
		assume	addr:zeropage
		ldx		bakwrd,y    ; aby -> zpy
		assume	addr:zeropage
		ldx		fwdwrd,y    ; aby -> zpy

		; pcr

		assume	addr:absolute
		ldx		+           ; pcr -> ab
		assume	addr:absolute
		ldx		-           ; pcr -> ab
		assume	addr:zeropage
		ldx		+           ; pcr -> zp
		assume	addr:zeropage
		ldx		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		ldx		$12         ; zp -> ab
		assume	addr:absolute
		ldx		bakbyt      ; zp -> ab
		assume	addr:absolute
		ldx		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		ldx		$12         ; zp -> zp
		assume	addr:zeropage
		ldx		bakbyt      ; zp -> zp
		assume	addr:zeropage
		ldx		fwdbyt      ; zp -> zp

		; zpy

		assume	addr:absolute
		ldx		$12,y       ; zpy -> aby
		assume	addr:absolute
		ldx		bakbyt,y    ; zpy -> aby
		assume	addr:absolute
		ldx		fwdbyt,y    ; zpy -> aby
		assume	addr:zeropage
		ldx		$12,y       ; zpy -> zpy
		assume	addr:zeropage
		ldx		bakbyt,y    ; zpy -> zpy
		assume	addr:zeropage
		ldx		fwdbyt,y    ; zpy -> zpy

 +

		; check:
		; LDY

 -
		; ab

		assume	addr:absolute
		ldy		$1234       ; ab -> ab
		assume	addr:absolute
		ldy		bakwrd      ; ab -> ab
		assume	addr:absolute
		ldy		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		ldy		$1234       ; ab -> zp
		assume	addr:zeropage
		ldy		bakwrd      ; ab -> zp
		assume	addr:zeropage
		ldy		fwdwrd      ; ab -> zp

		; abx

		assume	addr:absolute
		ldy		$1234,x     ; abx -> abx
		assume	addr:absolute
		ldy		bakwrd,x    ; abx -> abx
		assume	addr:absolute
		ldy		fwdwrd,x    ; abx -> abx
		assume	addr:zeropage
		ldy		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		ldy		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		ldy		fwdwrd,x    ; abx -> zpx

		; pcr

		assume	addr:absolute
		ldy		+           ; pcr -> ab
		assume	addr:absolute
		ldy		-           ; pcr -> ab
		assume	addr:zeropage
		ldy		+           ; pcr -> zp
		assume	addr:zeropage
		ldy		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		ldy		$12         ; zp -> ab
		assume	addr:absolute
		ldy		bakbyt      ; zp -> ab
		assume	addr:absolute
		ldy		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		ldy		$12         ; zp -> zp
		assume	addr:zeropage
		ldy		bakbyt      ; zp -> zp
		assume	addr:zeropage
		ldy		fwdbyt      ; zp -> zp

		; zpx

		assume	addr:absolute
		ldy		$12,x       ; zpx -> abx
		assume	addr:absolute
		ldy		bakbyt,x    ; zpx -> abx
		assume	addr:absolute
		ldy		fwdbyt,x    ; zpx -> abx
		assume	addr:zeropage
		ldy		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		ldy		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		ldy		fwdbyt,x    ; zpx -> zpx

 +

		; check:
		; STA

 -
		; ab

		assume	addr:absolute
		sta		$1234       ; ab -> ab
		assume	addr:absolute
		sta		bakwrd      ; ab -> ab
		assume	addr:absolute
		sta		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		sta		$1234       ; ab -> zp
		assume	addr:zeropage
		sta		bakwrd      ; ab -> zp
		assume	addr:zeropage
		sta		fwdwrd      ; ab -> zp

		; abx

		assume	addr:absolute
		sta		$1234,x     ; abx -> abx
		assume	addr:absolute
		sta		bakwrd,x    ; abx -> abx
		assume	addr:absolute
		sta		fwdwrd,x    ; abx -> abx
		assume	addr:zeropage
		sta		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		sta		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		sta		fwdwrd,x    ; abx -> zpx

		; aby

		assume	addr:absolute
		sta		$1234,y     ; aby -> aby
		assume	addr:absolute
		sta		bakwrd,y    ; aby -> aby
		assume	addr:absolute
		sta		fwdwrd,y    ; aby -> aby

		; pcr

		assume	addr:absolute
		sta		+           ; pcr -> ab
		assume	addr:absolute
		sta		-           ; pcr -> ab
		assume	addr:zeropage
		sta		+           ; pcr -> zp
		assume	addr:zeropage
		sta		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		sta		$12         ; zp -> ab
		assume	addr:absolute
		sta		bakbyt      ; zp -> ab
		assume	addr:absolute
		sta		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		sta		$12         ; zp -> zp
		assume	addr:zeropage
		sta		bakbyt      ; zp -> zp
		assume	addr:zeropage
		sta		fwdbyt      ; zp -> zp

		; zpiy

		assume	addr:zeropage
		sta		($12),y     ; zpiy -> zpiy
		assume	addr:zeropage
		sta		(bakbyt),y  ; zpiy -> zpiy
		assume	addr:zeropage
		sta		(fwdbyt),y  ; zpiy -> zpiy

		; zpx

		assume	addr:absolute
		sta		$12,x       ; zpx -> abx
		assume	addr:absolute
		sta		bakbyt,x    ; zpx -> abx
		assume	addr:absolute
		sta		fwdbyt,x    ; zpx -> abx
		assume	addr:zeropage
		sta		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		sta		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		sta		fwdbyt,x    ; zpx -> zpx

		; zpxi

		assume	addr:zeropage
		sta		($12,x)     ; zpxi -> zpxi
		assume	addr:zeropage
		sta		(bakbyt,x)  ; zpxi -> zpxi
		assume	addr:zeropage
		sta		(fwdbyt,x)  ; zpxi -> zpxi

		; zpy

		assume	addr:absolute
		sta		$12,y       ; zpy -> aby
		assume	addr:absolute
		sta		bakbyt,y    ; zpy -> aby
		assume	addr:absolute
		sta		fwdbyt,y    ; zpy -> aby

 +

		; check:
		; STX

 -
		; ab

		assume	addr:absolute
		stx		$1234       ; ab -> ab
		assume	addr:absolute
		stx		bakwrd      ; ab -> ab
		assume	addr:absolute
		stx		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		stx		$1234       ; ab -> zp
		assume	addr:zeropage
		stx		bakwrd      ; ab -> zp
		assume	addr:zeropage
		stx		fwdwrd      ; ab -> zp

		; aby

		assume	addr:zeropage
		stx		$1234,y     ; aby -> zpy
		assume	addr:zeropage
		stx		bakwrd,y    ; aby -> zpy
		assume	addr:zeropage
		stx		fwdwrd,y    ; aby -> zpy

		; pcr

		assume	addr:absolute
		stx		+           ; pcr -> ab
		assume	addr:absolute
		stx		-           ; pcr -> ab
		assume	addr:zeropage
		stx		+           ; pcr -> zp
		assume	addr:zeropage
		stx		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		stx		$12         ; zp -> ab
		assume	addr:absolute
		stx		bakbyt      ; zp -> ab
		assume	addr:absolute
		stx		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		stx		$12         ; zp -> zp
		assume	addr:zeropage
		stx		bakbyt      ; zp -> zp
		assume	addr:zeropage
		stx		fwdbyt      ; zp -> zp

		; zpy

		assume	addr:zeropage
		stx		$12,y       ; zpy -> zpy
		assume	addr:zeropage
		stx		bakbyt,y    ; zpy -> zpy
		assume	addr:zeropage
		stx		fwdbyt,y    ; zpy -> zpy

 +

		; check:
		; STY

 -
		; ab

		assume	addr:absolute
		sty		$1234       ; ab -> ab
		assume	addr:absolute
		sty		bakwrd      ; ab -> ab
		assume	addr:absolute
		sty		fwdwrd      ; ab -> ab
		assume	addr:zeropage
		sty		$1234       ; ab -> zp
		assume	addr:zeropage
		sty		bakwrd      ; ab -> zp
		assume	addr:zeropage
		sty		fwdwrd      ; ab -> zp

		; abx

		assume	addr:zeropage
		sty		$1234,x     ; abx -> zpx
		assume	addr:zeropage
		sty		bakwrd,x    ; abx -> zpx
		assume	addr:zeropage
		sty		fwdwrd,x    ; abx -> zpx

		; pcr

		assume	addr:absolute
		sty		+           ; pcr -> ab
		assume	addr:absolute
		sty		-           ; pcr -> ab
		assume	addr:zeropage
		sty		+           ; pcr -> zp
		assume	addr:zeropage
		sty		-           ; pcr -> zp

		; zp

		assume	addr:absolute
		sty		$12         ; zp -> ab
		assume	addr:absolute
		sty		bakbyt      ; zp -> ab
		assume	addr:absolute
		sty		fwdbyt      ; zp -> ab
		assume	addr:zeropage
		sty		$12         ; zp -> zp
		assume	addr:zeropage
		sty		bakbyt      ; zp -> zp
		assume	addr:zeropage
		sty		fwdbyt      ; zp -> zp

		; zpx

		assume	addr:zeropage
		sty		$12,x       ; zpx -> zpx
		assume	addr:zeropage
		sty		bakbyt,x    ; zpx -> zpx
		assume	addr:zeropage
		sty		fwdbyt,x    ; zpx -> zpx

 +

; forward reference

fwdbyt	.equ	$12
fwdwrd	.equ	$1234

; -------------------------------

		.end
