# a script to generate the current master HXA message list

# for Thompson AWK 4.0

# by Anton Treuenfels

# first created: 06/23/04
# last revision: 08/28/13

# - the output of this script is intended as input to a translator
# of source-embedded documenation (such as SED2HTML)

# ------------------

# output filename

local outFile = "hxa_mesg.doc"

# message indices and default texts

local mesgText

# ------------------

# print a line to output file

local function out(this) { print this > outFile }

# print a blank line to output file

local function blank() { print "" > outFile }

# print a comment line to output file

local function comment(this) { out( "# " this ) }

# print a topic line to output file

local function topic(this) { out( "!topic " this ) }

# clean a line for use

local function clean(line, field) {

    local str

    str = substr( line, index(line, field) )
    if ( match(str, /[ \t]+$/) )
        str = substr( str, 1, RSTART - 1 )
    return( str )
}

# generate the list

local function makedoc(list) {

    local name, cat, test
    local entry, contents

    # generate the header

    comment( "Hobby Cross Assembler Master Message List" )
    blank()
    comment( "Auto-generated by \"mesglist.awk\"" )
    blank()
    comment( "Last generation: " ctime() )
    blank()

    out( "%Copyright%" )
    blank()

    # master topic and table of contents

    topic( "Assembler Message Texts" )
    blank()

    # message table

    out( "!table" )
    out( "- b<Index>,b<Default Text>" )
    for ( name in list )
        out( "- " name "," list[name] )
}

# ------------------

# read the test file info

BEGIN {

    local fd, ndx, pos, mesg

    # get the test names and descriptions

    fd = fopen( "a_mesg.awk", "rt" )
    while ( !feof(fd) ) {

        getline() < fd
        if ( index($1, "=") && match($0, /=.+\+/) ) {           
            ndx = substr( $0, 2, RSTART-2 )
            mesg = substr( $0, RSTART+1, RLENGTH-2 )
            mesgText[ ndx ] = mesg
        }
    }
    close( fd )

    makedoc( mesgText )
}

